#!/usr/bin/env bash

# Copyright (C) 2018-Present Pivotal Software, Inc. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the under the Apache License,
# Version 2.0 (the "License”); you may not use this file except in compliance with the License. You may obtain a copy
# of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

set -euo pipefail

bin_dir='app/bin'
lib_dir='app/lib'

: "${BUILD_DIR:=/build}"

run() {
  echo >&2 "\$ $*"
  "$@"
}

install_mysql_client_utils() {
  cd "${BUILD_DIR}"

  local source_directory build_cache_digest="" source_digest=""

  source_directory=$(readlink -f /usr/local/src/percona-server-*/)
  source_digest=$(sha256sum "${source_directory}/MYSQL_VERSION" | awk '{print $1}')
  if [[ -f VERSION.dep ]]; then
    build_cache_digest=$(sha256sum VERSION.dep | awk '{print $1}')
  fi

  if [[ "${build_cache_digest}" != "${source_digest}" ]]; then
    echo >&2 '!!! Detected stale build cache for Percona Server. Invalidating cache. !!!'
    echo >&2 "${BUILD_DIR}/VERSION.dep (digest: ${build_cache_digest}) != ${source_directory}/MYSQL_VERSION (digest: ${source_digest})"
    rm -fr ./*
  else
    echo >&2 "Re-using existing build cache in ${BUILD_DIR}"
    echo >&2
  fi

  # shellcheck disable=SC2016
  run cmake "${source_directory}" \
    -Wno-deprecated \
    -DBUILD_CONFIG=mysql_release \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DCMAKE_INSTALL_PREFIX="${BUILD_DIR}" \
    -DCMAKE_INSTALL_RPATH='$ORIGIN/../lib' \
    -DFEATURE_SET=community \
    -DINSTALL_MYSQLTESTDIR= \
    -DWITH_BOOST=/usr/local/src/boost_1_59_0/ \
    -DWITH_EMBEDDED_SERVER=OFF \
    -DWITH_EDITLINE=bundled \
    -DWITH_SSL=system \
    -DWITH_ZLIB=bundled \
    -DIGNORE_AIO_CHECK=ON \
    -DWITHOUT_SERVER=ON
  run make --jobs "$(nproc)" install/strip mysql mysqldump
  cd -

  run install --directory app/bin app/lib
  run install --no-target-directory "${BUILD_DIR}/LICENSE" app/percona.LICENSE
  run install --no-target-directory "${BUILD_DIR}/README" app/percona.README
  run install --target-directory=app/bin "${BUILD_DIR}/bin/mysql" "${BUILD_DIR}/bin/mysqldump"
  run install --target-directory=app/lib \
    /usr/lib/x86_64-linux-gnu/{libssl.so.1.1,libcrypto.so.1.1} \
    /lib/x86_64-linux-gnu/libtinfo.so.5
}

install_migrate_task() {
  GOBIN="$PWD/app/bin" go install -ldflags="-s -w" github.com/pivotal-cf/mysql-cli-plugin/tasks/migrate
}

package_app() {
  cd app
  run zip migration-app.zip \
    bin/{migrate,mysql,mysqldump} \
    lib/{libssl.so.1.1,libcrypto.so.1.1,libtinfo.so.5} \
    percona.LICENSE percona.README
  cd -
}

clean_app_artifacts() {
  rm -rf "${bin_dir}" "${lib_dir}" "app/percona.LICENSE" "app/percona.README"
}

main() {
  local dep
  for dep in /usr/local/src/percona-server-*/; do
    if [[ ! -d ${dep} ]]; then
      echo >&2 "No source dependencies found in environment."
      echo >&2 "$0 should only be run under a linux environment using the image built from the top-level ./scripts/Dockerfile in this repo"
      echo >&2 "For local development run ./scripts/build-plugin instead."
      echo >&2 "Aborting."
      return 1
    fi
  done

  echo >&2 "Cleaning pre-existing stale app artifacts..."
  clean_app_artifacts && rm -f app/migration-app.zip
  echo >&2 "Installing migrate task binary into app/"
  install_migrate_task
  echo >&2 "Installing mysql client utilities into app/"
  install_mysql_client_utils
  echo >&2 "Packaging final cf migration app"
  package_app
  echo >&2 "Cleaning app build artifacts..."
  clean_app_artifacts
}

main
